version: '3'    #version of docker-compose
services:                   #implies the containers u r going to run
  dbos:                                    # mysql conatiner name 
    image: ${imagename}                    # interpolating the value from .env file when the docker compose link 
    restart: always                        
    volumes:                                #volume implies the persistent storage which is mount to a particular folder 
      - mysql_storage:/var/lib/mysql
    environment:                             # environment variables which need to be passed while running  a docker
            MYSQL_ROOT_PASSWORD: ${mysql_rp}
            MYSQL_USER: ${mysql_uname}
            MYSQL_PASSWORD: ${mysql_pass}
            MYSQL_DATABASE: ${mysql_dbname}
    networks:                                 # network with bridge as driver and in a same network two containers can ping by its name 
      - net1
    

  joomlaos:                         
    image: ${joomlaimage}
    restart: always
    #depends_on:            # to link the container and update the dns server so that two conatiner can ping by its name
    # - dbos
    ports:
      - ${basedock}          #patting is done : here basedock ==> host_port:container host wheere service is provided
    volumes:                                   # for persistent storage we mounted a storage named myjoomla_storage
      - myjoomla_storage:/var/www/html
    environment:
            JOOMLA_DB_HOST: dbos
            JOOMLA_DB_USER: root
            JOOMLA_DB_PASSWORD: ${mysql_rp} 
            JOOMLA_DB_NAME: ${mysql_dbname}
    networks:
       - net1    
volumes:
   mysql_storage:
   myjoomla_storage:


networks:       
  net1:                                  #driver --> bridge bcoz we want connectivity to outside world and a set up of router,switch , dns server
                                                                        #dhcp server and also we dont want to run our services on the docker host
                                                                        #we can use host for that but here we want to serve the service in container
    driver: bridge
    







